version: 2
jobs:
  build:
    parallelism: 4
    branches:
      ignore:
        - /rootfs\/.*/
    docker:
      - image: docker:19.03.8
    steps:
      - setup_remote_docker:
          version: 19.03.8
      - checkout
      - add_ssh_keys
      - restore_cache:
          key: deps
      - run:
          name: install bash
          command: apk --no-cache add bash git openssh-client xz
      - run:
          name: avoid hosts unknown for github
          command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: install bats
          command: |
            if [[ ! -e ~/deps/bats_v0.4.0.tar.gz ]]; then mkdir -p ~/deps; curl -sSL -o ~/deps/bats_v0.4.0.tar.gz https://github.com/sstephenson/bats/archive/v0.4.0.tar.gz; fi
            tar -xf ~/deps/bats_v0.4.0.tar.gz
            bats-0.4.0/install.sh /usr/local
      - save_cache:
          key: deps
          paths:
            - ~/deps
      #- run:
      #    shell: /bin/bash -eo pipefail -O globstar
       #   name: build images
        #  command: ./build $(circleci tests glob versions/**/options | circleci tests split)
      #- run:
       #   shell: /bin/bash -eo pipefail -O globstar
        #  name: test images
         # command: ./build test $(circleci tests glob versions/**/options | circleci tests split)
      #- run:
       #   shell: /bin/bash -eo pipefail -O globstar
        #  name: push images
         # command: |
         #   if [[ "$CIRCLE_BRANCH" == "release" ]]; then docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASSWORD; fi
          #  ./build push $(circleci tests glob versions/**/options | circleci tests split)
      #- run:
       #   shell: /bin/bash -eo pipefail -O globstar
        #  name: commit artifacts
         # command: ./build commit $(circleci tests glob versions/**/options | circleci tests split)
     # - store_artifacts:
      #    path: images
      - run: apk update
      - run: apk add curl curl-dev
      - run: mkdir -vp ~/.docker/cli-plugins/
      - run: curl --silent -L --output ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64
      - run: chmod a+x ~/.docker/cli-plugins/docker-buildx
      #- run: docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
      - run: docker run -it --rm --privileged tonistiigi/binfmt --install all
      - run: docker buildx create --name multiarch-builder --driver docker-container --use tls-environment
      - run: |
          docker buildx build --push --platform linux/arm64,linux/amd64 -t logspout:${CIRCLE_BRANCH} -t logspout:latest -f ./builder/Dockerfile .        
